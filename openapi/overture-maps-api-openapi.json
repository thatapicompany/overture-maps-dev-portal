{
    "openapi": "3.0.0",
    "paths": {
    "/": {
    "get": {
    "operationId": "AppController_getHello",
    "parameters": [],
    "responses": {
    "200": {
    "description": "Return a welcome message and links to the API documentation."
    }
    },
    "summary": "Welcome to the Overture Maps API",
    "tags": [
    "root"
    ]
    }
    },
    "/buildings": {
    "get": {
    "operationId": "BuildingsController_getBuildings",
    "parameters": [
    {
    "name": "lat",
    "required": true,
    "in": "query",
    "description": "Latitude coordinate. Required if country code is not provided.",
    "schema": {
    "example": 40.7128,
    "type": "number"
    }
    },
    {
    "name": "lng",
    "required": true,
    "in": "query",
    "description": "Longitude coordinate. Required if country code is not provided.",
    "schema": {
    "example": -74.006,
    "type": "number"
    }
    },
    {
    "name": "radius",
    "required": false,
    "in": "query",
    "description": "Search radius in meters, defaulting to 1000 meters if not provided.",
    "schema": {
    "minimum": 1,
    "default": 1000,
    "example": 1000,
    "type": "number"
    }
    },
    {
    "name": "limit",
    "required": false,
    "in": "query",
    "description": "Limit on the number of results returned, defaulting to 1000 if not provided.",
    "schema": {
    "minimum": 1,
    "default": 1000,
    "example": 10,
    "type": "number"
    }
    },
    {
    "name": "format",
    "required": false,
    "in": "query",
    "description": "Response format, defaulting to JSON. Options are \"json\", \"csv\", or \"geojson\".",
    "schema": {
    "default": "json",
    "example": "json",
    "enum": [
    "json",
    "csv",
    "geojson"
    ],
    "type": "string"
    }
    },
    {
    "name": "includes",
    "required": false,
    "in": "query",
    "description": "Array of fields to include in the properties field of the response, provided as a comma-separated string. Any fields not in the list will be excluded from the properties object. This is used to make the response lighter so your application is faster.",
    "schema": {
    "example": [
    "id",
    "geometry",
    "properties"
    ],
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    }
    ],
    "responses": {
    "200": {
    "description": ""
    }
    },
    "security": [
    {
    "API_KEY": []
    }
    ],
    "tags": [
    "Buildings"
    ]
    }
    },
    "/places": {
    "get": {
    "operationId": "PlacesController_",
    "parameters": [
    {
    "name": "GetPlacesDto",
    "required": true,
    "in": "query",
    "schema": {
    "$ref": "#/components/schemas/GetPlacesDto"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "Return Places.",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/PlaceResponseDto"
    }
    }
    }
    }
    }
    },
    "security": [
    {
    "API_KEY": []
    }
    ],
    "summary": "Get Places using Query params as filters",
    "tags": [
    "Places"
    ]
    }
    },
    "/places/buildings": {
    "get": {
    "operationId": "PlacesController_",
    "parameters": [
    {
    "name": "GetPlacesWithBuildingsDto",
    "required": true,
    "in": "query",
    "schema": {
    "$ref": "#/components/schemas/GetPlacesWithBuildingsDto"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "Return Places with Buildings.",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/PlaceResponseDto"
    }
    }
    }
    }
    }
    },
    "security": [
    {
    "API_KEY": []
    }
    ],
    "summary": "Get Places with their Building shapes using Query params as filters",
    "tags": [
    "Places"
    ]
    }
    },
    "/places/brands": {
    "get": {
    "operationId": "PlacesController_",
    "parameters": [
    {
    "name": "GetBrandsDto",
    "required": true,
    "in": "query",
    "schema": {
    "$ref": "#/components/schemas/GetBrandsDto"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "Return all Brands, along with a count of all Places for each.",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/BrandDto"
    }
    }
    }
    }
    }
    },
    "security": [
    {
    "API_KEY": []
    }
    ],
    "summary": "Get all Brands from Places using Query params as filters",
    "tags": [
    "Places"
    ]
    }
    },
    "/places/countries": {
    "get": {
    "operationId": "PlacesController_",
    "parameters": [],
    "responses": {
    "200": {
    "description": "Return all Countries, as well as a count of all the Places and Brands in each.",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/CountryResponseDto"
    }
    }
    }
    }
    }
    },
    "security": [
    {
    "API_KEY": []
    }
    ],
    "summary": "Get all Countries from Places using Query params as filters",
    "tags": [
    "Places"
    ]
    }
    },
    "/places/categories": {
    "get": {
    "operationId": "PlacesController_",
    "parameters": [
    {
    "name": "GetCategoriesDto",
    "required": true,
    "in": "query",
    "schema": {
    "$ref": "#/components/schemas/GetCategoriesDto"
    }
    }
    ],
    "responses": {
    "200": {
    "description": "Return all Categories, along with a count of all Brands and Places for each",
    "content": {
    "application/json": {
    "schema": {
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/CategoryResponseDto"
    }
    }
    }
    }
    }
    },
    "security": [
    {
    "API_KEY": []
    }
    ],
    "summary": "Get all Categories from Places using Query params as filters",
    "tags": [
    "Places"
    ]
    }
    }
    },
    "info": {
    "title": "Overture Maps API Documentation",
    "description": "OpenAPI docs for the Overture Maps API",
    "version": "1.0",
    "contact": {
    "name": "Aden Forshaw",
    "url": "https://thatapicompany.com/overture-maps-api",
    "email": "aden@thatapicompany.com"
    }
    },
    "tags": [
    {
    "name": "places",
    "description": "Operations related to Places"
    }
    ],
    "servers": [
    {
    "url": "http://localhost:8080/",
    "description": "Local environment"
    },
    {
    "url": "https://overture-maps-api.thatapicompany.com",
    "description": "Cloud API Service"
    }
    ],
    "components": {
    "securitySchemes": {
    "API_KEY": {
    "type": "apiKey",
    "in": "header",
    "name": "x-api-key"
    }
    },
    "schemas": {
    "GetPlacesDto": {
    "type": "object",
    "properties": {
    "lat": {
    "type": "number",
    "description": "Latitude coordinate. Required if country code is not provided.",
    "example": 40.7128
    },
    "lng": {
    "type": "number",
    "description": "Longitude coordinate. Required if country code is not provided.",
    "example": -74.006
    },
    "radius": {
    "type": "number",
    "description": "Search radius in meters, defaulting to 1000 meters if not provided.",
    "example": 1000,
    "minimum": 1,
    "default": 1000
    },
    "limit": {
    "type": "number",
    "description": "Limit on the number of results returned, defaulting to 1000 if not provided.",
    "example": 10,
    "minimum": 1,
    "default": 1000
    },
    "format": {
    "type": "string",
    "description": "Response format, defaulting to JSON. Options are \"json\", \"csv\", or \"geojson\".",
    "example": "json",
    "default": "json",
    "enum": [
    "json",
    "csv",
    "geojson"
    ]
    },
    "includes": {
    "description": "Array of fields to include in the properties field of the response, provided as a comma-separated string. Any fields not in the list will be excluded from the properties object. This is used to make the response lighter so your application is faster.",
    "example": [
    "id",
    "geometry",
    "properties"
    ],
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "country": {
    "type": "string",
    "description": "ISO 3166 country code consisting of 2 characters. Required if lat/lng are not provided.",
    "example": "US"
    },
    "brand_wikidata": {
    "type": "string",
    "description": "Wikidata brand ID associated with the place.",
    "example": "Q12345"
    },
    "brand_name": {
    "type": "string",
    "description": "Brand name associated with the place.",
    "example": "Starbucks"
    },
    "min_confidence": {
    "type": "number",
    "description": "Minimum confidence score for the places to be returned, defaulting to 0.5 if not provided.",
    "example": 0.5,
    "default": 0.5
    },
    "categories": {
    "type": "string",
    "description": "Array of category names, provided as a comma-separated string.",
    "example": "food,retail"
    }
    },
    "required": [
    "lat",
    "lng"
    ]
    },
    "GeometryDto": {
    "type": "object",
    "properties": {
    "type": {
    "type": "string",
    "description": "Type of geometry",
    "example": "Point"
    },
    "coordinates": {
    "description": "Coordinates representing the geometry.",
    "example": [
    40.7128,
    -74.006
    ],
    "type": "array",
    "items": {
    "type": "number"
    }
    }
    },
    "required": [
    "type",
    "coordinates"
    ]
    },
    "CategoryDto": {
    "type": "object",
    "properties": {
    "primary": {
    "type": "string",
    "description": "Primary category of the place.",
    "example": "Retail"
    }
    },
    "required": [
    "primary"
    ]
    },
    "BrandRulesDto": {
    "type": "object",
    "properties": {
    "variant": {
    "type": "string",
    "description": "Variant of the rule.",
    "example": "Abbreviation"
    },
    "value": {
    "type": "string",
    "description": "Value associated with the rule.",
    "example": "CP"
    }
    },
    "required": [
    "variant",
    "value"
    ]
    },
    "BrandNamesDto": {
    "type": "object",
    "properties": {
    "primary": {
    "type": "string",
    "description": "Primary name of the place.",
    "example": "Central Park"
    },
    "common": {
    "type": "object",
    "description": "Common names in different languages.",
    "example": {
    "en": "Central Park",
    "es": "Parque Central"
    },
    "properties": {}
    },
    "rules": {
    "description": "Naming rules or variants associated with the place.",
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/BrandRulesDto"
    }
    }
    },
    "required": [
    "primary"
    ]
    },
    "BrandDto": {
    "type": "object",
    "properties": {
    "names": {
    "description": "Names associated with the brand, usually Primary is the most useful",
    "allOf": [
    {
    "$ref": "#/components/schemas/BrandNamesDto"
    }
    ]
    }
    },
    "required": [
    "names"
    ]
    },
    "AddressDto": {
    "type": "object",
    "properties": {
    "freeform": {
    "type": "string",
    "description": "Full freeform address of the place.",
    "example": "123 Main St, Springfield"
    },
    "locality": {
    "type": "string",
    "description": "Locality or city name.",
    "example": "Springfield"
    },
    "region": {
    "type": "string",
    "description": "Region or state name.",
    "example": "Illinois"
    },
    "country": {
    "type": "string",
    "description": "Country name.",
    "example": "United States"
    }
    }
    },
    "SourceDto": {
    "type": "object",
    "properties": {
    "property": {
    "type": "string",
    "description": "Source property name.",
    "example": "OpenStreetMap"
    },
    "dataset": {
    "type": "string",
    "description": "Dataset source for the place.",
    "example": "OSM"
    },
    "record_id": {
    "type": "string",
    "description": "Unique identifier for the record in the dataset.",
    "example": "osm12345"
    }
    },
    "required": [
    "property",
    "dataset",
    "record_id"
    ]
    },
    "RulesDto": {
    "type": "object",
    "properties": {
    "variant": {
    "type": "string",
    "description": "Variant of the rule.",
    "example": "Abbreviation"
    },
    "value": {
    "type": "string",
    "description": "Value associated with the rule.",
    "example": "CP"
    }
    },
    "required": [
    "variant",
    "value"
    ]
    },
    "PlaceNamesDto": {
    "type": "object",
    "properties": {
    "primary": {
    "type": "string",
    "description": "Primary name of the place.",
    "example": "Central Park"
    },
    "common": {
    "type": "object",
    "description": "Common names in different languages.",
    "example": {
    "en": "Central Park",
    "es": "Parque Central"
    },
    "properties": {}
    },
    "rules": {
    "description": "Naming rules or variants associated with the place.",
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/RulesDto"
    }
    }
    },
    "required": [
    "primary"
    ]
    },
    "PlacePropertiesDto": {
    "type": "object",
    "properties": {
    "categories": {
    "description": "Primary category of the place.",
    "allOf": [
    {
    "$ref": "#/components/schemas/CategoryDto"
    }
    ]
    },
    "confidence": {
    "type": "number",
    "description": "Confidence score of the place.",
    "example": 0.8
    },
    "websites": {
    "description": "Websites associated with the place.",
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "emails": {
    "description": "Emails associated with the place.",
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "socials": {
    "description": "Social media links associated with the place.",
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "phones": {
    "description": "Phone numbers associated with the place.",
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "brand": {
    "description": "Brand details if applicable.",
    "allOf": [
    {
    "$ref": "#/components/schemas/BrandDto"
    }
    ]
    },
    "addresses": {
    "description": "Address information of the place.",
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/AddressDto"
    }
    },
    "theme": {
    "type": "string",
    "description": "Theme associated with the place.",
    "example": "Restaurant"
    },
    "type": {
    "type": "string",
    "description": "Type of feature or place.",
    "example": "Commercial"
    },
    "version": {
    "type": "string",
    "description": "Version number of the place data.",
    "example": "1"
    },
    "sources": {
    "description": "Source information for the place data.",
    "type": "array",
    "items": {
    "$ref": "#/components/schemas/SourceDto"
    }
    },
    "names": {
    "description": "Name details for the place.",
    "allOf": [
    {
    "$ref": "#/components/schemas/PlaceNamesDto"
    }
    ]
    },
    "ext_name": {
    "description": "Name of the place.",
    "allOf": [
    {
    "$ref": "#/components/schemas/PlaceNamesDto"
    }
    ]
    }
    },
    "required": [
    "categories",
    "theme",
    "type",
    "version",
    "sources",
    "names",
    "ext_name"
    ]
    },
    "PlaceResponseDto": {
    "type": "object",
    "properties": {
    "id": {
    "type": "string",
    "description": "Unique identifier of the place.",
    "example": "12345"
    },
    "type": {
    "type": "string",
    "description": "Type of place or feature.",
    "example": "Point of Interest"
    },
    "geometry": {
    "description": "Geometric representation of the place.",
    "allOf": [
    {
    "$ref": "#/components/schemas/GeometryDto"
    }
    ]
    },
    "properties": {
    "description": "Properties and additional details of the place.",
    "allOf": [
    {
    "$ref": "#/components/schemas/PlacePropertiesDto"
    }
    ]
    }
    },
    "required": [
    "id",
    "type",
    "geometry",
    "properties"
    ]
    },
    "GetPlacesWithBuildingsDto": {
    "type": "object",
    "properties": {
    "lat": {
    "type": "number",
    "description": "Latitude coordinate. Required if country code is not provided.",
    "example": 40.7128
    },
    "lng": {
    "type": "number",
    "description": "Longitude coordinate. Required if country code is not provided.",
    "example": -74.006
    },
    "radius": {
    "type": "number",
    "description": "Search radius in meters, defaulting to 1000 meters if not provided.",
    "example": 1000,
    "minimum": 1,
    "default": 1000
    },
    "limit": {
    "type": "number",
    "description": "Limit on the number of results returned, defaulting to 1000 if not provided.",
    "example": 10,
    "minimum": 1,
    "default": 1000
    },
    "format": {
    "type": "string",
    "description": "Response format, defaulting to JSON. Options are \"json\", \"csv\", or \"geojson\".",
    "example": "json",
    "default": "json",
    "enum": [
    "json",
    "csv",
    "geojson"
    ]
    },
    "includes": {
    "description": "Array of fields to include in the properties field of the response, provided as a comma-separated string. Any fields not in the list will be excluded from the properties object. This is used to make the response lighter so your application is faster.",
    "example": [
    "id",
    "geometry",
    "properties"
    ],
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "country": {
    "type": "string",
    "description": "ISO 3166 country code consisting of 2 characters. Required if lat/lng are not provided.",
    "example": "US"
    },
    "brand_wikidata": {
    "type": "string",
    "description": "Wikidata brand ID associated with the place.",
    "example": "Q12345"
    },
    "brand_name": {
    "type": "string",
    "description": "Brand name associated with the place.",
    "example": "Starbucks"
    },
    "min_confidence": {
    "type": "number",
    "description": "Minimum confidence score for the places to be returned, defaulting to 0.5 if not provided.",
    "example": 0.5,
    "default": 0.5
    },
    "categories": {
    "type": "string",
    "description": "Array of category names, provided as a comma-separated string.",
    "example": "food,retail"
    }
    },
    "required": [
    "lat",
    "lng"
    ]
    },
    "GetBrandsDto": {
    "type": "object",
    "properties": {
    "country": {
    "type": "string",
    "description": "ISO 3166 country code consisting of 2 characters. Required if lat/lng are not provided.",
    "example": "US",
    "maxLength": 2,
    "minLength": 2
    },
    "lat": {
    "type": "number",
    "description": "Latitude coordinate. Required if country code is not provided.",
    "example": 40.7128
    },
    "lng": {
    "type": "number",
    "description": "Longitude coordinate. Required if country code is not provided.",
    "example": -74.006
    },
    "radius": {
    "type": "number",
    "description": "Search radius in meters, defaulting to 1000 meters if not provided.",
    "example": 1000,
    "minimum": 1,
    "default": 1000
    },
    "categories": {
    "description": "Array of category names, provided as a comma-separated string.",
    "example": [
    "food",
    "retail"
    ],
    "type": "array",
    "items": {
    "type": "string"
    }
    }
    }
    },
    "CountryCountsDto": {
    "type": "object",
    "properties": {
    "places": {
    "type": "number",
    "description": "Number of places in this Country",
    "example": 100
    },
    "brands": {
    "type": "number",
    "description": "Number of brands that are associated with the Country",
    "example": 10
    }
    },
    "required": [
    "places",
    "brands"
    ]
    },
    "CountryResponseDto": {
    "type": "object",
    "properties": {
    "country": {
    "type": "string",
    "description": "The ISO code of the Country.",
    "example": "US"
    },
    "ext_counts": {
    "description": "Counts related to the Country e.g. how many Places and Brands are associated with it",
    "allOf": [
    {
    "$ref": "#/components/schemas/CountryCountsDto"
    }
    ]
    }
    },
    "required": [
    "country",
    "ext_counts"
    ]
    },
    "GetCategoriesDto": {
    "type": "object",
    "properties": {
    "lat": {
    "type": "number",
    "description": "Latitude coordinate. Required if country code is not provided.",
    "example": 40.7128
    },
    "lng": {
    "type": "number",
    "description": "Longitude coordinate. Required if country code is not provided.",
    "example": -74.006
    },
    "radius": {
    "type": "number",
    "description": "Search radius in meters, defaulting to 1000 meters if not provided.",
    "example": 1000,
    "minimum": 1,
    "default": 1000
    },
    "limit": {
    "type": "number",
    "description": "Limit on the number of results returned, defaulting to 1000 if not provided.",
    "example": 10,
    "minimum": 1,
    "default": 1000
    },
    "format": {
    "type": "string",
    "description": "Response format, defaulting to JSON. Options are \"json\", \"csv\", or \"geojson\".",
    "example": "json",
    "default": "json",
    "enum": [
    "json",
    "csv",
    "geojson"
    ]
    },
    "includes": {
    "description": "Array of fields to include in the properties field of the response, provided as a comma-separated string. Any fields not in the list will be excluded from the properties object. This is used to make the response lighter so your application is faster.",
    "example": [
    "id",
    "geometry",
    "properties"
    ],
    "type": "array",
    "items": {
    "type": "string"
    }
    },
    "country": {
    "type": "string",
    "description": "ISO 3166 country code consisting of 2 characters.",
    "example": "US",
    "maxLength": 2,
    "minLength": 2
    }
    },
    "required": [
    "lat",
    "lng"
    ]
    },
    "CategoryCountsDto": {
    "type": "object",
    "properties": {
    "places": {
    "type": "number",
    "description": "Number of places with this Category",
    "example": 100
    },
    "brands": {
    "type": "number",
    "description": "Number of brands that are associated with the Categorys",
    "example": 10
    }
    },
    "required": [
    "places",
    "brands"
    ]
    },
    "CategoryResponseDto": {
    "type": "object",
    "properties": {
    "primary": {
    "type": "string",
    "description": "Primary category of the place.",
    "example": "Retail"
    },
    "ext_counts": {
    "description": "Counts related to the Category e.g. how many Places and Brands are associated with it",
    "allOf": [
    {
    "$ref": "#/components/schemas/CategoryCountsDto"
    }
    ]
    }
    },
    "required": [
    "primary",
    "ext_counts"
    ]
    }
    }
    }
    }